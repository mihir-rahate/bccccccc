/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Professor;

import java.awt.CardLayout;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Main.EducationSystem;
import model.Professor.ProfessorUCourses;
import model.Professor.Professor;

/**
 *
 * @author sidvi
 */
public class ProfessorOfferCourseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProfessorOfferCourseJPanel
     */
    
    private JPanel professorcardpanel;
    private EducationSystem lc;
    
    public ProfessorOfferCourseJPanel(JPanel professorcardpanel, EducationSystem lc) {
        initComponents();
        
        this.professorcardpanel=professorcardpanel;
        this.lc=lc;
        txtcourseprofid.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblcourseid = new javax.swing.JLabel();
        lblcoursename = new javax.swing.JLabel();
        lblcoursestart = new javax.swing.JLabel();
        lblcourseend = new javax.swing.JLabel();
        lblcourselanguage = new javax.swing.JLabel();
        lblcourseregion = new javax.swing.JLabel();
        lblcoursecapacity = new javax.swing.JLabel();
        txtcourseid = new javax.swing.JTextField();
        txtcourseregion = new javax.swing.JTextField();
        txtcourselanguage = new javax.swing.JTextField();
        txtcoursename = new javax.swing.JTextField();
        txtcoursecapacity = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        datestart = new com.toedter.calendar.JDateChooser();
        dateend = new com.toedter.calendar.JDateChooser();
        lblcourseid1 = new javax.swing.JLabel();
        txtcourseprofid = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ADD COURSE");

        lblcourseid.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblcourseid.setText("COURSE ID:");

        lblcoursename.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblcoursename.setText("COURSE NAME:");

        lblcoursestart.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblcoursestart.setText("COURSE START DATE:");

        lblcourseend.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblcourseend.setText("COURSE END DATE:");

        lblcourselanguage.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblcourselanguage.setText("COURSE LANGUAGE:");

        lblcourseregion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblcourseregion.setText("COURSE REGION:");

        lblcoursecapacity.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblcoursecapacity.setText("COURSE CAPACITY:");

        txtcourseid.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtcourseid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcourseidKeyPressed(evt);
            }
        });

        txtcourseregion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtcourseregion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcourseregionKeyPressed(evt);
            }
        });

        txtcourselanguage.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtcourselanguage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcourselanguageKeyPressed(evt);
            }
        });

        txtcoursename.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtcoursename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcoursenameActionPerformed(evt);
            }
        });
        txtcoursename.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcoursenameKeyPressed(evt);
            }
        });

        txtcoursecapacity.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtcoursecapacity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcoursecapacityKeyPressed(evt);
            }
        });

        btnadd.setBackground(new java.awt.Color(51, 51, 255));
        btnadd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnadd.setForeground(new java.awt.Color(255, 255, 204));
        btnadd.setText("ADD COURSE");
        btnadd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        lblcourseid1.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        lblcourseid1.setForeground(new java.awt.Color(255, 0, 255));

        txtcourseprofid.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147)
                        .addComponent(txtcourseprofid, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblcourseid1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(txtcourseid, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblcourseregion)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblcoursestart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblcourseid, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblcoursename, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblcourseend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblcourselanguage)
                            .addComponent(lblcoursecapacity))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtcoursename)
                            .addComponent(datestart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtcourseregion)
                            .addComponent(dateend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtcourselanguage, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(txtcoursecapacity, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(btnadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(171, 171, 171))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtcoursecapacity, txtcourseid, txtcourselanguage});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(lblcourseid1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcourseprofid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcourseid)
                    .addComponent(txtcourseid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcoursename, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcoursename))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(datestart, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcoursestart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateend, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblcourseend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcourseregion)
                    .addComponent(txtcourseregion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcourselanguage)
                    .addComponent(txtcourselanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcoursecapacity)
                    .addComponent(txtcoursecapacity, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addComponent(btnadd)
                .addGap(209, 209, 209))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblcoursecapacity, lblcourseend, lblcourseid, lblcourselanguage, lblcoursename, lblcourseregion, lblcoursestart});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtcoursecapacity, txtcourseid, txtcourselanguage, txtcoursename, txtcourseregion});

    }// </editor-fold>//GEN-END:initComponents

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        
        String idtext=txtcourseid.getText();
        String coursename=txtcoursename.getText();
        
        Date startdate = datestart.getDate();
        Date enddate = dateend.getDate();
        String region=txtcourseregion.getText();
        String language=txtcourselanguage.getText();
        String capacitytext=txtcoursecapacity.getText();
        
        if (idtext.isEmpty() || coursename.isEmpty() || startdate==null || enddate==null || region.isEmpty() || language.isEmpty() || capacitytext.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Check for empty fields ");
            return;
        }
        
        if (idtext.matches(".*[^0-9\\s].*")) {
            JOptionPane.showMessageDialog(this, "Course ID can only contain numbers");
            txtcourseid.setText("");
            return;
        }
        
        if (capacitytext.matches(".*[^0-9\\s].*")) {
            JOptionPane.showMessageDialog(this, "Course capacity can only contain numbers");
            txtcoursecapacity.setText("");
            return;
        }
        
        if (coursename.matches(".*[^a-zA-Z\\s].*")) {
            JOptionPane.showMessageDialog(this, "Course Name can only contain alphabets");
            txtcoursename.setText("");
            return;
        }
        
        
        if (region.matches(".*[^a-zA-Z\\s].*")) {
            JOptionPane.showMessageDialog(this, "Course region can only contain alphabets");
            txtcourseregion.setText("");
            return;
        }
        
        if (language.matches(".*[^a-zA-Z\\s].*")) {
            JOptionPane.showMessageDialog(this, "Course language can only contain alphabets");
            txtcourselanguage.setText("");
            return;
        }
        
        int id= Integer.parseInt(txtcourseid.getText());
        int capacity=Integer.parseInt(txtcoursecapacity.getText());
        
        for(ProfessorUCourses profcourse:lc.ProfessorUCourseslist)
        {
          if(profcourse.getPCourseId()==id)
          {
              JOptionPane.showMessageDialog(this, "ID already exists ");
              return;
          }
        }
        
        LocalDate startdate1 = startdate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate enddate1 = enddate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        long daysDifference = ChronoUnit.DAYS.between(startdate1, enddate1);
        
        if(daysDifference!=120)
        {
            JOptionPane.showMessageDialog(this, "Course must be planned for atleast 1 semester(120days)");
            return;
        }
        
        int professorid=Integer.parseInt(txtcourseprofid.getText());
        for (Professor professor : lc.ProfessorList) 
        {
            if (professorid==(professor.getProfessorUserId()))
            {
                String professorname=professor.getProfessorName();
                
                ProfessorUCourses pc = lc.AddProfessorCourse();
                
                pc.setPCourseId(id);
                pc.setCProfessorName(professorname);
                pc.setPCourseName(coursename);
                pc.setPCourseStartDate(startdate1);
                pc.setPCourseEndDate(enddate1);
                pc.setPCourseRegion(region);
                pc.setPCourseLanguage(language);
                pc.setCourseRegLimit(capacity);
                
        
                JOptionPane.showMessageDialog(this, "NEW COURSE ADDED");
                System.out.println("Size of Prof course ArrayList: " + lc.ProfessorUCourseslist.size());
        
                txtcourseid.setText("");
                txtcoursename.setText("");
                datestart.setDate(null);
                dateend.setDate(null);
                txtcourseregion.setText("");
                txtcourselanguage.setText("");
                txtcoursecapacity.setText("");
        
                for (ProfessorUCourses course : lc.ProfessorUCourseslist) {
                    System.out.println("NEW COURSE");
                    System.out.println("Course ID: " + course.getPCourseId());
                    System.out.println("Course Professor Name: " + course.getCProfessorName());
                    System.out.println("Course Name: " + course.getPCourseName());
                    System.out.println("Course region: " + course.getPCourseRegion());
                    System.out.println("Course language: " + course.getPCourseLanguage());
                    System.out.println("course capacity: " + course.getCourseRegLimit());
                    System.out.println("course startdate: " + course.getPCourseStartDate());
                    System.out.println("course enddate: " + course.getPCourseEndDate());
                    System.out.println("\n");
                }
            }
        }
    }//GEN-LAST:event_btnaddActionPerformed

    private void txtcourseidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcourseidKeyPressed
        // TODO add your handling code here:
        int c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtcourseid.setEditable(false);
        }
        else{
            txtcourseid.setEditable(true);
        }
    }//GEN-LAST:event_txtcourseidKeyPressed

    private void txtcoursenameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcoursenameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtcoursename.setEditable(true);
        }
        else{
            txtcoursename.setEditable(false);
        }
    }//GEN-LAST:event_txtcoursenameKeyPressed

    private void txtcourseregionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcourseregionKeyPressed
        // TODO add your handling code here:
         char c = evt.getKeyChar();

        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtcourseregion.setEditable(true);
        }
        else{
            txtcourseregion.setEditable(false);
        }
    }//GEN-LAST:event_txtcourseregionKeyPressed

    private void txtcourselanguageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcourselanguageKeyPressed
        // TODO add your handling code here:
         char c = evt.getKeyChar();

        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtcourselanguage.setEditable(true);
        }
        else{
            txtcourselanguage.setEditable(false);
        }
    }//GEN-LAST:event_txtcourselanguageKeyPressed

    private void txtcoursecapacityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcoursecapacityKeyPressed
        // TODO add your handling code here:
        int c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtcoursecapacity.setEditable(false);
        }
        else{
            txtcoursecapacity.setEditable(true);
        }
    }//GEN-LAST:event_txtcoursecapacityKeyPressed

    private void txtcoursenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcoursenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcoursenameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private com.toedter.calendar.JDateChooser dateend;
    private com.toedter.calendar.JDateChooser datestart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblcoursecapacity;
    private javax.swing.JLabel lblcourseend;
    private javax.swing.JLabel lblcourseid;
    private javax.swing.JLabel lblcourseid1;
    private javax.swing.JLabel lblcourselanguage;
    private javax.swing.JLabel lblcoursename;
    private javax.swing.JLabel lblcourseregion;
    private javax.swing.JLabel lblcoursestart;
    private javax.swing.JTextField txtcoursecapacity;
    private javax.swing.JTextField txtcourseid;
    private javax.swing.JTextField txtcourselanguage;
    private javax.swing.JTextField txtcoursename;
    public javax.swing.JTextField txtcourseprofid;
    private javax.swing.JTextField txtcourseregion;
    // End of variables declaration//GEN-END:variables
}
