/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Professor;

import java.awt.CardLayout;
import java.awt.Image;
import java.io.File;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Main.EducationSystem;
import model.Professor.Professor;
import Model.Student.Student;

/**
 *
 * @author sidvi
 */
public class ProfessorDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProfessorPanel
     */
    
    private JPanel professorcardpanel;
    private EducationSystem lc;
    
    public ProfessorDetailsJPanel(JPanel professorcardpanel, EducationSystem lc) {
        initComponents();
        
        this.professorcardpanel=professorcardpanel;
        this.lc=lc;
        
        txtpid.setEnabled(false);
        txtpname.setEnabled(false);
        txtpusername.setEnabled(false);
        txtppassword.setEnabled(false);
        jDateChooser1.setEnabled(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();
        lblusername = new javax.swing.JLabel();
        lblpassword = new javax.swing.JLabel();
        lbldob = new javax.swing.JLabel();
        txtpid = new javax.swing.JTextField();
        txtpusername = new javax.swing.JTextField();
        txtppassword = new javax.swing.JTextField();
        btnupdatepname = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btnback = new javax.swing.JButton();
        btnupdatepuname = new javax.swing.JButton();
        btnupdateppassword = new javax.swing.JButton();
        lblid = new javax.swing.JLabel();
        txtpname = new javax.swing.JTextField();
        lblphoto = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(700, 700));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PROFESSOR DETAILS ");

        lblname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblname.setText("NAME:");

        lblusername.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblusername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblusername.setText("USERNAME:");

        lblpassword.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblpassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblpassword.setText("PASSWORD:");

        lbldob.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbldob.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldob.setText("DATE OF BIRTH:");

        txtpid.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtpid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpidKeyPressed(evt);
            }
        });

        txtpusername.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtppassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnupdatepname.setBackground(new java.awt.Color(0, 0, 255));
        btnupdatepname.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnupdatepname.setForeground(new java.awt.Color(255, 255, 204));
        btnupdatepname.setText("UPDATE ");
        btnupdatepname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatepnameActionPerformed(evt);
            }
        });

        btnback.setBackground(new java.awt.Color(0, 51, 255));
        btnback.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnback.setForeground(new java.awt.Color(255, 255, 204));
        btnback.setText("BACK");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btnupdatepuname.setBackground(new java.awt.Color(0, 0, 255));
        btnupdatepuname.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnupdatepuname.setForeground(new java.awt.Color(255, 255, 204));
        btnupdatepuname.setText("UPDATE ");
        btnupdatepuname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatepunameActionPerformed(evt);
            }
        });

        btnupdateppassword.setBackground(new java.awt.Color(0, 51, 255));
        btnupdateppassword.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnupdateppassword.setForeground(new java.awt.Color(255, 255, 204));
        btnupdateppassword.setText("UPDATE ");
        btnupdateppassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateppasswordActionPerformed(evt);
            }
        });

        lblid.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblid.setText("PROFESSOR ID:");

        txtpname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtpname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpnameKeyPressed(evt);
            }
        });

        lblphoto.setBackground(new java.awt.Color(153, 204, 255));
        lblphoto.setFont(new java.awt.Font("Sitka Text", 1, 12)); // NOI18N
        lblphoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblphoto.setText("CLICK TO ADD PICTURE");
        lblphoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblphoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblphotoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblpassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblusername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtpname)
                    .addComponent(txtpusername))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnupdateppassword)
                    .addComponent(btnupdatepuname)
                    .addComponent(btnupdatepname))
                .addGap(294, 294, 294))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnback)
                .addGap(467, 467, 467))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(lbldob))
                    .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtppassword)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(txtpid))
                        .addGap(438, 438, 438))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(40, 40, 40)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblid)
                    .addComponent(txtpid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtpname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblname)
                    .addComponent(btnupdatepname, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblusername)
                        .addComponent(txtpusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnupdatepuname))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtppassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblpassword))
                    .addComponent(btnupdateppassword))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbldob)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addComponent(btnback)
                .addGap(30, 30, 30))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtpid, txtppassword, txtpusername});

    }// </editor-fold>//GEN-END:initComponents

    private void btnupdatepnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatepnameActionPerformed
        // TODO add your handling code here:
        txtpname.setEnabled(true);
        String name = JOptionPane.showInputDialog(this, "Please enter a new name:");
        int id=Integer.valueOf(txtpid.getText());
        
        if(name == null ){
            txtpname.setEnabled(false);
            return;
        }
        
        if (name.matches(".*[^a-zA-Z\\s].*")) {
            JOptionPane.showMessageDialog(this, "Name can only contain letters");
            txtpname.setEnabled(false);
            return;
        }
        
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter username to update");
            return;
        }
        else
        {
            for (Professor professor : lc.ProfessorList)
            {
                if(id==professor.getProfessorUserId())
                {
                    professor.setProfessorName(name);
                    txtpname.setText(name);
                    System.out.println("id: " + id);
                    System.out.println("updated name: " + name);
                }
            }
        }
        txtpname.setEnabled(false);

    }//GEN-LAST:event_btnupdatepnameActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        professorcardpanel.remove(this);
        CardLayout layout = (CardLayout) professorcardpanel.getLayout();
        layout.previous(professorcardpanel);
        return;
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnupdatepunameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatepunameActionPerformed
        // TODO add your handling code here:
        txtpusername.setEnabled(true);
        String username = JOptionPane.showInputDialog(this, "Please enter a new username:");
        int id=Integer.valueOf(txtpid.getText());
        
        if(username == null ){
            txtpusername.setEnabled(false);
            return;
        }
        if (username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter username to update");
            return;
        }
        
        boolean usernameExists = false;

    for (Professor professor : lc.ProfessorList) 
        {
            if (username.equals(professor.getProfessorUsername())) 
            {
            usernameExists = true;
            break;
            }
        }
    if (usernameExists) 
    {
        JOptionPane.showMessageDialog(this, "USERNAME TAKEN");
        txtpusername.setEnabled(false);
        return;
    }
    
    for (Student student : lc.SudentList)
        {
            if (username.equals(student.getStudentUsername())) 
            {
                usernameExists = true;
                break;
            }
        }
    
    if (usernameExists) 
    {
        JOptionPane.showMessageDialog(this, "USERNAME TAKEN");
        txtpusername.setEnabled(false);
        return;
    }
    
    for (Professor professor : lc.ProfessorList)
    {
        if(id==professor.getProfessorUserId())
        {
            professor.setProfessorName(username);
            txtpusername.setText(username);
            System.out.println("id: " + id);
            System.out.println("updated username: " + username);
            
        }
    }
    txtpusername.setEnabled(false);
    }//GEN-LAST:event_btnupdatepunameActionPerformed

    private void btnupdateppasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateppasswordActionPerformed
        // TODO add your handling code here:
        txtppassword.setEnabled(true);
        String password = JOptionPane.showInputDialog(this, "Please enter a new password:");
        int id=Integer.valueOf(txtpid.getText());
        
        if (password == null ) {
            txtppassword.setEnabled(false);
            return;
        }
        if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter new password");
            return;
        }
        
        if (!isPasswordValid(password)) {
            JOptionPane.showMessageDialog(this, "Password must be at least 8 characters long,contain at least 1 uppercase letter, 1 lowercase letter and 1 digit");
            txtppassword.setEnabled(false);
            return;
        } 
        for (Professor professor : lc.ProfessorList)
        {
            if(id==professor.getProfessorUserId())
            {
                professor.setProfessorPassword(password);
                txtppassword.setText(password);
                System.out.println("id: " + id);
                System.out.println("updated password: " + password);
            
        }
    }
    txtppassword.setEnabled(false);
    
    }//GEN-LAST:event_btnupdateppasswordActionPerformed

    private void lblphotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblphotoMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser= new JFileChooser();
        FileNameExtensionFilter filter= new FileNameExtensionFilter("4 extensions supported","jpg","png","jpeg","gif");
        fileChooser.setFileFilter(filter);
        int selected=fileChooser.showOpenDialog(null);
        if (selected == JFileChooser.APPROVE_OPTION){
            File file=fileChooser.getSelectedFile();
            String getSelectedImage= file.getAbsolutePath();
            //JOptionPane.showMessageDialog(null, getSelectedImage);
            ImageIcon imIco=new ImageIcon(getSelectedImage);
            Image imFit =imIco.getImage();
            Image imgFit=imFit.getScaledInstance(  lblphoto.getWidth(), lblphoto.getHeight(), Image.SCALE_SMOOTH);

            lblphoto.setIcon(new ImageIcon(imgFit));

        }
    }//GEN-LAST:event_lblphotoMouseClicked

    private void txtpidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpidKeyPressed
        // TODO add your handling code here:
        int c = evt.getKeyChar();
        if(Character.isLetter(c)){
            txtpid.setEditable(false);
        }
        else{
            txtpid.setEditable(true);
        }
    }//GEN-LAST:event_txtpidKeyPressed

    private void txtpnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpnameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if(Character.isLetter(c) || Character.isWhitespace(c) || Character.isISOControl(c)){
            txtpname.setEditable(true);
        }
        else{
            txtpname.setEditable(false);
        }
    }//GEN-LAST:event_txtpnameKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnupdatepname;
    private javax.swing.JButton btnupdateppassword;
    private javax.swing.JButton btnupdatepuname;
    public com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbldob;
    private javax.swing.JLabel lblid;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lblpassword;
    private javax.swing.JLabel lblphoto;
    private javax.swing.JLabel lblusername;
    public javax.swing.JTextField txtpid;
    public javax.swing.JTextField txtpname;
    public javax.swing.JTextField txtppassword;
    public javax.swing.JTextField txtpusername;
    // End of variables declaration//GEN-END:variables
public boolean isPasswordValid(String password) {
    // Check if the password is at least 8 characters long and meets all criteria
    if (password.length() >= 8 && 
        password.matches(".*[A-Z].*") && 
        password.matches(".*[a-z].*") && 
        password.matches(".*\\d.*")) {
        return true;
    }

    // If any of the conditions fail, the password is invalid
    return false;
}
}
