/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Student;

import java.awt.CardLayout;
import java.awt.Image;
import java.io.File;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Main.EducationSystem;
import model.Professor.Professor;
import Model.Student.Student;

/**
 *
 * @author riyasingh
 */
public class StudentDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentDetailsJPanel
     */
    
    private JPanel studentcardpanel;
    private EducationSystem lc;
    
    public StudentDetailsJPanel(JPanel studentcardpanel, EducationSystem lc) {
        initComponents();
        
        this.studentcardpanel=studentcardpanel;
        this.lc=lc;
        
        txtsid.setEnabled(false);
        txtsname.setEnabled(false);
        txtsusername.setEnabled(false);
        txtspassword.setEnabled(false);
        jDateChooser1.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnupdatesname = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        btnupdatesuname = new javax.swing.JButton();
        lblname = new javax.swing.JLabel();
        btnupdatespassword = new javax.swing.JButton();
        lblusername = new javax.swing.JLabel();
        lblid = new javax.swing.JLabel();
        lblpassword = new javax.swing.JLabel();
        txtsname = new javax.swing.JTextField();
        lbldob = new javax.swing.JLabel();
        lblphoto = new javax.swing.JLabel();
        txtsid = new javax.swing.JTextField();
        txtsusername = new javax.swing.JTextField();
        txtspassword = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        btnupdatesname.setBackground(new java.awt.Color(0, 153, 153));
        btnupdatesname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnupdatesname.setForeground(new java.awt.Color(255, 255, 255));
        btnupdatesname.setText("UPDATE ");
        btnupdatesname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatesnameActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STUDENT DETAILS");

        btnupdatesuname.setBackground(new java.awt.Color(0, 153, 153));
        btnupdatesuname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnupdatesuname.setForeground(new java.awt.Color(255, 255, 255));
        btnupdatesuname.setText("UPDATE ");
        btnupdatesuname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatesunameActionPerformed(evt);
            }
        });

        lblname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblname.setText("STUDENT NAME:");

        btnupdatespassword.setBackground(new java.awt.Color(0, 153, 153));
        btnupdatespassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnupdatespassword.setForeground(new java.awt.Color(255, 255, 255));
        btnupdatespassword.setText("UPDATE ");
        btnupdatespassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdatespasswordActionPerformed(evt);
            }
        });

        lblusername.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblusername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblusername.setText("USERNAME:");

        lblid.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblid.setText("STUDENT ID:");

        lblpassword.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblpassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblpassword.setText("PASSWORD:");

        lbldob.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbldob.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldob.setText("DATE OF BIRTH:");

        lblphoto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblphoto.setForeground(new java.awt.Color(0, 153, 153));
        lblphoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblphoto.setText("CLICK TO ADD PICTURE");
        lblphoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblphoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblphotoMouseClicked(evt);
            }
        });

        txtsid.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtsusername.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtspassword.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblusername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbldob, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(588, 588, 588)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtsusername, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                            .addComponent(txtspassword)
                            .addComponent(txtsname)
                            .addComponent(txtsid)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnupdatesname)
                            .addComponent(btnupdatesuname)
                            .addComponent(btnupdatespassword))))
                .addGap(398, 398, 398))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(72, 72, 72)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblname)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtsusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnupdatesuname)
                            .addComponent(lblusername)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblid)
                            .addComponent(txtsid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtsname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnupdatesname))
                        .addGap(50, 50, 50)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblpassword)
                    .addComponent(txtspassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnupdatespassword))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbldob)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(119, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnupdatesnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatesnameActionPerformed
        // TODO add your handling code here:
        txtsname.setEnabled(true);
        String name = JOptionPane.showInputDialog(this, "Please enter a new name:");
        int id=Integer.valueOf(txtsid.getText());

        if(name == null ){
            txtsname.setEnabled(false);
            return;
        }

        if (name.matches(".*[^a-zA-Z\\s].*")) {
            JOptionPane.showMessageDialog(this, "Name can only contain letters");
            txtsname.setEnabled(false);
            return;
        }

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter username to update");
            return;
        }
        else
        {
            for (Student student : lc.SudentList)
            {
                if(id==student.getStudentUserId())
                {
                    student.setStudentName(name);
                    txtsname.setText(name);
                    System.out.println("id: " + id);
                    System.out.println("updated name: " + name);
                }
            }
        }
        txtsname.setEnabled(false);
    }//GEN-LAST:event_btnupdatesnameActionPerformed

    private void btnupdatesunameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatesunameActionPerformed
        // TODO add your handling code here:
        txtsusername.setEnabled(true);
        String username = JOptionPane.showInputDialog(this, "Please enter a new username:");
        int id=Integer.valueOf(txtsid.getText());

        if(username == null ){
            txtsusername.setEnabled(false);
            return;
        }
        if (username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter username to update");
            return;
        }

        boolean usernameExists = false;

        for (Professor student : lc.ProfessorList)
        {
            if (username.equals(student.getProfessorUsername()))
            {
                usernameExists = true;
                break;
            }
        }
        if (usernameExists)
        {
            JOptionPane.showMessageDialog(this, "USERNAME TAKEN");
            txtsusername.setEnabled(false);
            return;
        }

        for (Student student : lc.SudentList)
        {
            if (username.equals(student.getStudentUsername()))
            {
                usernameExists = true;
                break;
            }
        }

        if (usernameExists)
        {
            JOptionPane.showMessageDialog(this, "USERNAME TAKEN");
            txtsusername.setEnabled(false);
            return;
        }

        for (Student student : lc.SudentList)
        {
            if(id==student.getStudentUserId())
            {
                student.setStudentName(username);
                txtsusername.setText(username);
                System.out.println("id: " + id);
                System.out.println("updated username: " + username);

            }
        }
        txtsusername.setEnabled(false);
    }//GEN-LAST:event_btnupdatesunameActionPerformed

    private void btnupdatespasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdatespasswordActionPerformed
        // TODO add your handling code here:
        txtspassword.setEnabled(true);
        String password = JOptionPane.showInputDialog(this, "Please enter a new password:");
        int id=Integer.valueOf(txtsid.getText());

        if (password == null ) {
            txtspassword.setEnabled(false);
            return;
        }
        if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter new password");
            return;
        }
        
        if (!isPasswordValid(password)) {
            JOptionPane.showMessageDialog(this, "Password must be at least 8 characters long,contain at least 1 uppercase letter, 1 lowercase letter and 1 digit");
            txtspassword.setEnabled(false);
            return;
        } 
        for (Student student : lc.SudentList)
        {
            if(id==student.getStudentUserId())
            {
                student.setStudentPassword(password);
                txtspassword.setText(password);
                System.out.println("id: " + id);
                System.out.println("updated password: " + password);

            }
        }
        txtspassword.setEnabled(false);

    }//GEN-LAST:event_btnupdatespasswordActionPerformed

    private void lblphotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblphotoMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser= new JFileChooser();
        FileNameExtensionFilter filter= new FileNameExtensionFilter("4 extensions supported","jpg","png","jpeg","gif");
        fileChooser.setFileFilter(filter);
        int selected=fileChooser.showOpenDialog(null);
        if (selected == JFileChooser.APPROVE_OPTION){
            File file=fileChooser.getSelectedFile();
            String getSelectedImage= file.getAbsolutePath();
            //JOptionPane.showMessageDialog(null, getSelectedImage);
            ImageIcon imIco=new ImageIcon(getSelectedImage);
            Image imFit =imIco.getImage();
            Image imgFit=imFit.getScaledInstance(  lblphoto.getWidth(), lblphoto.getHeight(), Image.SCALE_SMOOTH);

            lblphoto.setIcon(new ImageIcon(imgFit));

        }
    }//GEN-LAST:event_lblphotoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnupdatesname;
    private javax.swing.JButton btnupdatespassword;
    private javax.swing.JButton btnupdatesuname;
    public com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbldob;
    private javax.swing.JLabel lblid;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lblpassword;
    private javax.swing.JLabel lblphoto;
    private javax.swing.JLabel lblusername;
    public javax.swing.JTextField txtsid;
    public javax.swing.JTextField txtsname;
    public javax.swing.JTextField txtspassword;
    public javax.swing.JTextField txtsusername;
    // End of variables declaration//GEN-END:variables
public boolean isPasswordValid(String password) {
    // Check if the password is at least 8 characters long and meets all criteria
    if (password.length() >= 8 && 
        password.matches(".*[A-Z].*") && 
        password.matches(".*[a-z].*") && 
        password.matches(".*\\d.*")) {
        return true;
    }

    // If any of the conditions fail, the password is invalid
    return false;
}
}
