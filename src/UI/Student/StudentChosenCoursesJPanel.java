/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Student;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Main.EducationSystem;
import model.Professor.ProfessorUCourses;
import model.Professor.Professor;
import model.Rating.Rating;
import Model.Student.StudentUCourses;
import Model.Student.Student;

/**
 *
 * @author riyasingh
 */
public class StudentChosenCoursesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentChosenCoursesJPanel
     */
    private JPanel studentcardpanel;
    private EducationSystem lc;
    
    public StudentChosenCoursesJPanel(JPanel studentcardpanel, EducationSystem lc) {
        initComponents();
        this.studentcardpanel=studentcardpanel;
        this.lc=lc;
        
       
        txtstudentmyid.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        btnaddfeedback = new javax.swing.JToggleButton();
        txtaddfeedback = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btndropcourse = new javax.swing.JButton();
        txtstudentmyid = new javax.swing.JTextField();
        btnpopulate = new javax.swing.JButton();
        txtRating = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        tblTable.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " NAME", " ID", "PROFESSOR NAME", "REGION", "LANGUAGE", "START DATE", "END DATE", "GRADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTable);
        if (tblTable.getColumnModel().getColumnCount() > 0) {
            tblTable.getColumnModel().getColumn(0).setResizable(false);
            tblTable.getColumnModel().getColumn(1).setResizable(false);
            tblTable.getColumnModel().getColumn(2).setResizable(false);
            tblTable.getColumnModel().getColumn(3).setResizable(false);
            tblTable.getColumnModel().getColumn(4).setResizable(false);
            tblTable.getColumnModel().getColumn(5).setResizable(false);
            tblTable.getColumnModel().getColumn(6).setResizable(false);
            tblTable.getColumnModel().getColumn(7).setResizable(false);
        }

        btnaddfeedback.setBackground(new java.awt.Color(0, 153, 153));
        btnaddfeedback.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnaddfeedback.setForeground(new java.awt.Color(255, 255, 255));
        btnaddfeedback.setText("ADD FEEDBACK");
        btnaddfeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddfeedbackActionPerformed(evt);
            }
        });

        txtaddfeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddfeedbackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MY COURSES");

        btndropcourse.setBackground(new java.awt.Color(0, 153, 153));
        btndropcourse.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btndropcourse.setForeground(new java.awt.Color(255, 255, 255));
        btndropcourse.setText("DROP COURSE");
        btndropcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndropcourseActionPerformed(evt);
            }
        });

        txtstudentmyid.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        txtstudentmyid.setForeground(new java.awt.Color(102, 102, 255));
        txtstudentmyid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstudentmyidActionPerformed(evt);
            }
        });

        btnpopulate.setBackground(new java.awt.Color(0, 153, 153));
        btnpopulate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnpopulate.setForeground(new java.awt.Color(255, 255, 255));
        btnpopulate.setText("VIEW COURSES");
        btnpopulate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpopulateActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("RATING:");

        btnSave.setBackground(new java.awt.Color(0, 153, 153));
        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnpopulate)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtstudentmyid, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btndropcourse, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtaddfeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnaddfeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtstudentmyid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(btnpopulate)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btndropcourse)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtaddfeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnaddfeedback))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnSave))
                .addContainerGap(301, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddfeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddfeedbackActionPerformed
//        // TODO add your handling code here:
//         btnaddfeedback.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                int selectedRow = tblTable.getSelectedRow();
//                if (selectedRow >= 0) {
////                    String selectedCourseName = (String) tblTable.getValueAt(selectedRow, 0);
//                    String feedbackText = txtaddfeedback.getText();
//                    Integer courseID = (Integer) tblTable.getValueAt(selectedRow, 1);
//                    String professorName = (String) tblTable.getValueAt(selectedRow, 0);
//                    String ratingValue = txtRating.getText();
//                    
//                    Rating rating = new Rating(professorName, courseID, ratingValue, feedbackText);
//                    
//                    rating.setFeedback(feedbackText);
//                    rating.setValue(ratingValue);
//                    rating.setCourseID(ratingValue);
//                    rating.setProfessorName(professorName);
//                    
////                    rating.setValue(btnRating.getText());
//                  
//                      txtaddfeedback.setText("");
//                      txtRating.setText("");
//                } else {
//                    JOptionPane.showMessageDialog(null, "Please select a course to leave feedback for.");
//                }
//            }
//         });
    }//GEN-LAST:event_btnaddfeedbackActionPerformed

    private void btnpopulateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpopulateActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnpopulateActionPerformed

    private void btndropcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndropcourseActionPerformed
        // TODO add your handling code here:

        int selectedrow=tblTable.getSelectedRow();
        if (selectedrow>=0)
        {
            int dialogButton=JOptionPane.YES_NO_OPTION;
            int dialogResult=JOptionPane.showConfirmDialog(null, "Proceed to DROP course?", "Warning",dialogButton);
            if (dialogResult==JOptionPane.YES_OPTION)
            {
                Integer courseId = (Integer) tblTable.getValueAt(selectedrow, 1);

                for(StudentUCourses course:lc.StudentsUCourseslist)
                {
                    if(courseId==course.getSCourseId())
                    {
                        lc.deletestudcourse(course);
                        populateTable();
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please select row to delete ","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btndropcourseActionPerformed

    private void txtaddfeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddfeedbackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddfeedbackActionPerformed

    private void txtstudentmyidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstudentmyidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstudentmyidActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JToggleButton btnaddfeedback;
    private javax.swing.JButton btndropcourse;
    private javax.swing.JButton btnpopulate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextField txtRating;
    private javax.swing.JTextField txtaddfeedback;
    public javax.swing.JTextField txtstudentmyid;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        String idtext=txtstudentmyid.getText();
        int id=Integer.parseInt(idtext);
        
        DefaultTableModel model=(DefaultTableModel) tblTable.getModel(); //type casting tablemodel to defaulttablemodel for jtable
        model.setRowCount(0); //deleting empty records
        
        int columnCount = model.getColumnCount();
        for (int column = 0; column < columnCount; column++) 
        {
            Class<?> columnClass = model.getColumnClass(column);
            System.out.println("Column " + column + " data type: " + columnClass.getName());
        }
        
        for(Student s: lc.SudentList)
        {
            if (id==s.getStudentUserId())
            {
                String name=s.getStudentName();
                for(StudentUCourses sc : lc.getStudentsUCourseslist())
                {
                    
                    if(name.equals(sc.getCStudentName()))
                    {
                         String prof=sc.getSCourseProfessor();
                         
                         Object[] row=new Object[8];
                        
                        row[0]=sc.getSCourseName(); 
                        row[1]=sc.getSCourseId();
                        row[2]=prof;
                        row[3]=sc.getSCourseRegion(); 
                        row[4]=sc.getSCourseLanguage();
                        row[5]=sc.getCourseStartDate();
                        row[6]=sc.getCourseEndDate(); 
                        row[7]=sc.getSCourseGrade();
                    
                        model.addRow(row);
                    }
                }
            }
        }
    }           
}
